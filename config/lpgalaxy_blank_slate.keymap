/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define NAVL 1 // navigation layer
#define NUML 2 // number and symbol layer
#define FNBT 3 // function and bluetooth control layer

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

#define BT(n) BT_SEL n
#define HYPR  LC(LS(LG(LALT)))

/ {
    chosen {
       zmk,matrix_transform = &ortho_transform;
    };

    // macros {
    //     ZMK_MACRO(
    //         thumbs_up,
	// 	    wait-ms = <1>;
	// 	    tap-ms = <5>;
    //         bindings = <&kp PLUS &kp COLON &kp PLUS &kp N1 &kp COLON &kp RET>;
    //     )
    // };
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp DEL>;
        };
    };
    
    tap_dances {
    	shifty: shift_caps_word {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SHIFTY";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&kp LSHFT>, <&caps_word>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
                &kp ESC    &kp Q        &kp W     &kp F     &kp P          &kp G           &kp J         &kp L        &kp U      &kp Y     &kp SEMI        &kp BKSP
                &kp TAB    &kp A        &kp R     &kp S     &kp T          &kp D           &kp H         &kp N        &kp E      &kp I     &kp O           &kp QUOT
                &shifty    &mt LSHFT Z  &kp X     &kp C     &kp V          &kp B           &kp K         &kp M        &kp COMMA  &kp DOT   &mt RSHFT FSLH  &kp RSHFT
                &kp LCTRL  &mo FNBT     &kp LALT  &kp LGUI  &lt NUML BSPC  &lt NAVL SPACE  &lt NUML RET  &lt NAVL TAB  &kp RALT  &mo FNBT  &trans          &kp RIGHT
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
                &trans  &trans    &kp HOME  &kp UP    &kp END   &trans   &kp C_VOL_UP  &kp LBKT  &kp RBKT    &trans      &trans    &kp CAPS
                &trans  &kp HYPR  &kp LEFT  &kp DOWN  &kp RIGHT &trans   &kp C_VOL_DN  &kp LBRC  &kp RBRC    &trans      &kp SQT   &trans
                &trans  &trans    &kp PG_UP &trans    &kp PG_DN &trans   &kp C_MUTE    &kp C_PP  &kp C_PREV  &kp C_NEXT  &trans    &trans
                &trans  &trans    &trans    &trans    &trans    &trans   &trans        &trans    &trans      &trans      &trans    &trans
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
                &trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET &kp AMPS  &kp STAR  &kp MINUS &kp EQUAL &trans
                &trans  &kp N1    &kp N2  &kp N3    &kp N4    &kp N5     &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &trans
                &trans  &trans    &trans  &kp LPAR  &kp RPAR  &kp GRAVE  &trans    &trans    &kp BSLH  &trans    &trans    &trans
                &trans  &trans    &trans  &trans    &trans    &trans     &trans    &trans    &trans    &trans    &trans    &trans
            >;
        };

        fnbt_layer {
            label = "FnBT";
            bindings = <
                &trans      &kp F1     &kp F2     &kp F3     &kp F4     &kp F5     &kp F6  &kp F7   &kp F8   &kp F9  &kp F10  &trans
                &bt BT_CLR  &bt BT(0)  &bt BT(1)  &bt BT(2)  &bt BT(3)  &bt BT(4)  &trans  &kp F11  &kp F12  &trans  &trans   &trans
                &trans      &trans     &trans     &trans     &trans     &trans     &trans  &trans   &trans   &trans  &trans   &trans
                &trans      &trans     &trans     &trans     &trans     &trans     &trans  &trans   &trans   &trans  &trans   &bootloader
            >;
        };
    };
};

